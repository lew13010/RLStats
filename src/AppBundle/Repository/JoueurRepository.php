<?php

namespace AppBundle\Repository;

/**
 * JoueurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JoueurRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllWithRank()
    {
        $qb = $this->createQueryBuilder('j');
        $qb
            ->select('j', 'r', 'd', 't', 'l')
            ->leftJoin('j.lineUp', 'l')
            ->innerJoin('j.ranks', 'r')
            ->innerJoin('r.tiers', 't')
            ->innerJoin('r.divisions','d')
            ->addOrderBy('j.pseudo', 'asc')
            ->addOrderBy('r.types', 'asc')
            ;
        return $qb->getQuery()->getResult();
    }

    public function getSearchWithRank($rankMin, $rankMax, $categorie)
    {
        $qb = $this->createQueryBuilder('j');
        $qb
            ->select('j', 'r', 'd', 't', 'l')
            ->leftJoin('j.lineUp', 'l')
            ->innerJoin('j.ranks', 'r')
            ->innerJoin('r.tiers', 't')
            ->innerJoin('r.divisions','d')
            ->where('t.tierId >= :rankMin')
            ->andWhere('t.tierId <= :rankMax')
            ->andWhere('r.types = :categorie')
            ->setParameter('rankMin', $rankMin)
            ->setParameter('rankMax', $rankMax)
            ->setParameter('categorie', $categorie)
            ->addOrderBy('j.pseudo', 'asc')
            ->addOrderBy('r.types', 'asc')
        ;
        return $qb->getQuery()->getResult();
    }
}
